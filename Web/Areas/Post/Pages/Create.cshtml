@page
@model Web.Areas.Post.Pages.Create
@using Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "_Layout";
}

<head>
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
</head>

<section class="custom-section" style="
            justify-content: start;
            height: 100vh;
            align-items: center;
            flex-direction: column;">
    <div class="child-node" style="max-width: 900px;">
        <form id="createPost" class="custom-form" style="padding: 0;" method="post">
            <div class="custom-form-group col" style="width: 100%;justify-content: start;align-items: start">
                <input class="custom-input" placeholder="TITLE" style="border: 0;font-size: 1em;"/>
            </div>
            <div class="custom-form-group row" style="width: 100%;justify-content: start;align-items: center">
                <ul id="tags-output" class="selectable-tags">
                </ul>
                <input id="tags" class="custom-input" placeholder="TAGS" style="border: 0;font-size: 0.8em;"/>
            </div>
            <div class="custom-form-group col" style="width: 100%;justify-content: start;align-items: start">
                <div id="editor" style="max-width: 691px;">
                    <p style="word-break: break-all">Write something great!</p>
                </div>
            </div>
        </form>
    </div>
</section>

<style>
    .ql-container.ql-snow { border: none !important;}
</style>

<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

<!-- Initialize Quill editor -->
<script>
    const toolbarOptions = [
        [{ 'header': [1, 2, false] }, { 'font': [] }],
            ['bold', 'italic', 'underline', 'strike', 'blockquote'],
            [{'list': 'ordered'}, {'list': 'bullet'}, 
             {'indent': '-1'}, {'indent': '+1'}],
            ['link', 'image', 'video', 'code'],
            ['clean']                                        
    ];

   var quill = new Quill('#editor', {
     modules: {
       toolbar: toolbarOptions
     },
     theme: 'snow'
   })
</script>

<!-- Tags -->
<script>
let currentTags = [];
let input = document.getElementById("tags");
let result = document.getElementById("tags-output");

var MAX_TAGS = 4;
var MAX_TAG_NAME_LENGTH = 15;

function reloadTags() {
    while (result.firstChild) {
        result.removeChild(result.firstChild);
    }
}

function addTags() {
    reloadTags();
    for (var i = 0; i < currentTags.length; i++) {
        var child = document.createElement("li");
        child.textContent = currentTags[i].replace(" ", "\u00A0");
        child.id = "tag-" + i;
        result.appendChild(child);
    }
    console.log(currentTags)
}

input.addEventListener('keyup', function(e) {
    if (e.key === 'Enter') {
        if (currentTags.length < MAX_TAGS && e.target.value.length <= MAX_TAG_NAME_LENGTH) {
            currentTags.push(input.value.trim());
            addTags();
            input.value = '';
        }
    }
})

result.addEventListener("click", function(e) {
    if (e.target.tagName === 'LI') {
        currentTags.splice(e.target.id.replace("tag-", ""), 1)
        addTags();
        e.target.remove();
    }
});


</script>